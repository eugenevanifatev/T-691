package com.company;

import java.util.LinkedHashSet;
import java.util.Random;

public class PasswordGenerator {

    public static StringBuilder createPassword(int length, Integer ... code) {
        StringBuilder string = new StringBuilder();
        if(length <= 0 || code.length < 1)
            return string;
        Random random = new Random();
        char[] chars = new char[countInputs(code) * 2];
        initChars(chars, code);
        int character;
        int i;
        while (string.length() < length) {
            character = random.nextInt(123);
            for(i = 0; i < chars.length; i += 2)
                if(character >= chars[i] && character <= chars[i + 1])
                    string.append((char)character);
        }
        return string;
    }

    private static boolean contains(int num, Integer ... integers) {
        for(int i = 0; i < integers.length; ++i)
            if (integers[i].equals(num))
                return true;
        return false;
    }

    private static int countInputs(Integer ... integers) {
        LinkedHashSet<Integer> set = new LinkedHashSet<>();
        for(int i = 0; i < integers.length; ++i)
            if ((integers[i].equals(0) && !set.contains(0)) || (integers[i].equals(1) && !set.contains(1)) || (integers[i].equals(2) && !set.contains(2)))
                set.add(i);
        return set.size();
    }

    private static void initChars(char[] chars, Integer ... code) {
        int counter = 0;
        if(contains(0, code)) {
            chars[counter++] = '0';
            chars[counter++] = '9';
        }
        if(contains(1, code)) {
            chars[counter++] = 'a';
            chars[counter++] = 'z';
        }
        if(contains(2, code)) {
            chars[counter++] = 'A';
            chars[counter] = 'Z';
        }
    }
}
